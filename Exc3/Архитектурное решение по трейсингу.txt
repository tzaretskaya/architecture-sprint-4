- Shop API
- CRM API
- Messages Queue
- MES API

Мотивация
Клиенты часто не получают заказ в срок. Добавление трейсинга поможет решить эту проблему. С добавлением трейсинга разработчик сможет посмотреть, сколько, где и с какими параметрами прошёл вызов. У трейсинга как средства устранения неполадок есть дополнительные преимущества, поскольку любое исключение или ошибка обычно фиксируется вместе со всем контекстом запроса. Мы сможем добавить контекст в логирование, и отслеживать их по requestId.
Tracing повлияет на такие метрики как: response time, error number, кол-во завершенных заказов

Предлагаемое решение
Трейсинг будет реализован с помощью OpenTelemetry. Необходимо добавить Jaeger, и подключить OTel в ShopAPI, CRM API и по возможности MES API.
Схема: /architecture-sprint-4/Exc3/jewerly_c4_model_3.drawio

Компромиссы
В системе имеется проприетарный компонент MES API. Если в нем трудности с добавлением sdk, то хотя бы можно залогировать полученный контекст из сообщений RabbitMQ.

Безопасность
Внутри компании:
1. Ограничение доступа
    - Настройка ролей (RBAC) для пользователей системы трейсинга
    - Использование VPN для защиты системы от внешнего доступа
2. Шифрование данных
    - Использование TLS для защиты трафика между агентами и системой трейсинга
    - Шифрование хранения данных в трейсинге
3. Аудит доступа
    - Логирование всех попыток подключения к системе
    - Регулярная проверка логов на наличие подозрительных действий

Снаружи компании
1. API Gateway - защита API вызовов трейсинга через аутентификацию и rate-limiting
2. Web Application Firewall (WAF) - фильтрация вредоносных запросов к трейсинговым данным
3. Исключение передачи ПД - убедиться, что данные трейсинга не содержат персональной информации



