Логи:

Shop API
- создание заказа. Логируем время, идентификатор покупателя, номер заказа.
- изменение статуса заказа. Логируем время, идентификатор покупателя, номер заказа, статус.
- загрузка файла модели. Логируем время, идентификатор покупателя, номер заказа.

CRM API
- создание заказа
- изменение статуса заказа. Логируем время, идентификатор покупателя, номер заказа.
- загрузка файла модели. Логируем время, идентификатор покупателя, номер заказа.

MES API
- назначение оператора на заказ. Логируем время, номер заказа, идентификатор оператора.
- изменение статуса расчета цены заказа. Логируем время, номер заказа.
- изменение статуса заказа. Логируем время, номер заказа, статус.

Также будут добавлены логи уровня ERROR при перехвате исключений при этих событиях. Логи уровня WARN в случае, если пользователь пытается авторизоваться несколько раз, но неуспешно.

Мотивация
Логи помогают при отладке разных компонентов приложения, а также позволяют собирать и анализировать данные о работе системы. Это помогает обнаружить ошибки.
В данном случае мы сможем отследить, на каком этапе, когда, в каком статусе останавливаются заказы, которые никак не закончатся в срок.
Логи повлияют на такие метрики как error rate (что также влияет на пользовательский опыт), количество завершенных заказов и заказов в застывшем статусе на долгое время

В первую очередь надо настроить логирование и трейсинг для CRP API и по возможности MES API, поскольку их взаимодействие самое сложное, через RabbitMQ и они являются главными для выполнения заказа.

Предлагаемое решение
Схема: /architecture-sprint-4/Exc4/jewerly_c4_model_4.drawio
Добавление ELK
Доступ к логам только для сотрудников компании с актуальной учетной записью и ролью “Поддержка”
Индекс логов: будут создаваться по датам по системам. Поскольку заказы могут длиться несколько месяцев, стоит хранить индексы, например, полгода.

Алерты и анализ
- Если количество ошибок в сервисе превышает порог, то алертить
- Если количество ошибок резко возросло за коротки срок, то возможна DDoS атака, то алертить
- Ошибки можно сгруппировать по типам и отсортировать по количеству, тогда будут видны самые проблемные места
